"""
This module will hold the class Packet, subclasses of Packet, and various Packet-related Events.
Packet will be an abstract class.
"""

from abc import ABCMeta
from .common import *


class Packet(object):
    """
    Packets are units of information in the network.
    They are generated by a flow; all packets in the same flow have the same destination network address.
    Packets can be router packets, data packets, or ACKs. All of these have a fixed size specified in common.py.
    """

    def __init__(self, id=None, flow_ID=None, source_ID=None, destination_ID=None,
                 start_time_sec=None, size_bits=None):
        """
        :ivar int id: an id field (int), used by the Flow to keep track of the packets and their ACKs,
        and to know when to retransmit. These are zero-indexed.
        :ivar int flow_ID: the flow to which this packet belongs. So, (flow_ID, packet_ID)
        uniquely identifies a given data packet.
        :ivar string source_ID: source Device ID (string).
        :ivar string destination_ID: destination Device ID (string).
        :ivar float start_time_sec: (float) time at which the packet was created (in sec).
        :ivar int size_bits: (int) size of the packet in bits.
        """
        self.id = id
        self.flow_ID = flow_ID
        self.source_ID = source_ID
        self.destination_ID = destination_ID
        self.start_time_sec = start_time_sec
        self.size_bits = size_bits


class DataPacket(Packet):
    """
    DataPacket class: a packet used for transferring data between Hosts.
    """

    def __init__(self):
        Packet.__init__(self)


class AckPacket(Packet):
    """
    AckPacket class: a packet used for sending ACKs between Hosts.
    """

    def __init__(self, flow_packets_received=None):
        Packet.__init__(self)

        """
        :ivar list flow_packets_received: an ascending, sorted list of all of the packet IDs
        that have been received by the destination Host. This is used to implement selective repeat.

        """
        self.flow_packets_received = flow_packets_received


class RouterPacket(Packet):
    """
    RouterPacket class: a packet used to update routing tables between Routers.
    """
    def __init__(self, device_distances=None):
        Packet.__init__(self)

        """
        :ivar map device_distances: a map from (Device, Device) to cost,
        which represents the knowledge that a given Router has about the distance between those two Devices.
        """

        self.device_distances = device_distances
        self.id = -1
